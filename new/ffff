Feature: SSE and SDP interaction

  Background:
    * def sseClient = Java.type('com.example.SseClient')
    * def sdpPostClient = Java.type('com.example.SdpPostClient')
    * def sseUrl = 'http://localhost:8080/sse'
    * def sdpUrl = 'http://localhost:8080/sdp'

  Scenario: Test SSE events and SDP messages
    * sseClient.startListening(sseUrl)

    # Wait for initial events
    * karate.delay(500)  # Adjust delay as needed

    # Assert for initial events using Java code
    * def receivedPing = sseClient.hasReceivedEvent('ping ping').result()
    * assert receivedPing == true

    # Send message to SDP with false flag after 20 seconds
    * karate.wait 20s
    * sdpPostClient.postMessage(sdpUrl, 'Message from SDP (keepAlive=false)', false)

    # Assert for updated message in SSE after 5 seconds (adjust if needed)
    * karate.delay 5s
    * def receivedSdpMessage = sseClient.hasReceivedEvent('Message from SDP (keepAlive=false)').result()
    * assert receivedSdpMessage == true

    # Send final message with true flag after 60 seconds
    * karate.wait 40s  # Adjust wait time to reach 60 seconds total
    * sdpPostClient.postMessage(sdpUrl, 'Final message from SDP (keepAlive=true)', true)

    # Assert for final message and connection closure
    * karate.delay 5s  # Adjust delay if needed
    * def receivedFinalMessage = sseClient.hasReceivedEvent('Final message from SDP (keepAlive=true)').result()
    * assert receivedFinalMessage == true
    * # Additional assertion for connection closure using sseClient methods if available

    # You can add more steps for further validations ...
